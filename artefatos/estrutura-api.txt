DEFINIÇÕES INICIAIS

- Path raiz: /api/

- Exemplo de URI de um recurso: /api/categoria/

- Exemplo de URL https://keyanywhere.com.br/api/categoria

- Os nomes dos recursos estão no singular

- Exemplo de usos dos verbos HTTP:

	GET
		* https://keyanywhere.com.br/api/categoria/5e101923-fd6a-4047-b4b4-3c75ceb31ad4 
		* https://keyanywhere.com.br/api/categoria/add
		Exemplo de recurso retorna somente html de uma página

	POST
		* https://keyanywhere.com.br/api/categoria
		É recebido como resposta o objeto do recurso criado.

	PUT
		* https://keyanywhere.com.br/api/categoria/5e101923-fd6a-4047-b4b4-3c75ceb31ad4
		É recebido como resposta o objeto do recurso editado.

	DELETE
		* https://keyanywhere.com.br/api/categoria/5e101923-fd6a-4047-b4b4-3c75ceb31ad4


-É utilizado o Modelo de Maturidade de Richardson

Texto para leitura: https://www.brunobrito.net.br/richardson-maturity-model/


DADOS RETORNADOS, FORMATO E IDENTIFICAÇÃO

- Toda a comunicação(request/response) com a API é utilizando o formato JSON.

- O retorno da API é por padrão um array de objetos JSON. Se a resposta esperada for um unico objeto, mesmo assim ele virá em um array.

O array de objetos sempre virá na propriedade 'json:', exemplo: 

{
	json: [
		{
			id: 1,
			uuid: 5e101923-fd6a-4047-b4b4-3c75ceb31ad4
			nome: "Servidor"
		},
		{
			id: 2,
			uuid: 566ddfa9-699c-45c8-8f65-573f670264f2
			nome: "Banco"
		},
	],
}

- Para solicitar que na resposta venha o conteudo no formato JSON e HTML, precisa ser adicionado no header 'Accept' os Media Types esperados, exemplo: 

Accept: application/json, text/html

Quando for solicitado que na resposta venha HTML, ele será retornado na pripriedade 'html', no formato de string.

{
	html: "<li id='1'>Servidor</p><li id='2'>Banco</p>",
	json: [
		{
			id: 1,
			uuid: 5e101923-fd6a-4047-b4b4-3c75ceb31ad4
			nome: "Servidor"
		},
		{
			id: 2,
			uuid: 566ddfa9-699c-45c8-8f65-573f670264f2
			nome: "Banco"
		},
	],
}

- O identificador dos recursos é gerado utilizando a UUID na versão 4.0

STATUS CODES

É retornado o status code como especificado na documentação: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status

HATEOAS

// Para fazer
